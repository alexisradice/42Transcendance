import { Button, Group, Loader, Modal } from "@mantine/core";
import { useMyData } from "../../hooks/useMyData";
import { errorNotif } from "../../utils/errorNotif";
import { axiosPrivate } from "../../utils/fetcher";
import { useState } from "react";
import ProfileForm from "../ProfileForm/ProfileForm";
import PinCodeValidator from "../PinCodeValidator/PinCodeValidator";

type Props = {
	opened: boolean;
	close: () => void;
};

const SettingsModal = ({ opened, close }: Props) => {
	const { user, error, isLoading } = useMyData();
	const [qrCode, setQrCode] = useState<string>("");

	const twoFAGenerate = async () => {
		try {
			const response = await axiosPrivate.patch("/user/twofa/generate");
			setQrCode(response.data);
		} catch (err: unknown) {
			errorNotif(err);
		}
	};

	return (
		<Modal
			radius="md"
			centered={true}
			opened={opened}
			onClose={close}
			title="Settings"
			overlayProps={{
				backgroundOpacity: 0.55,
				blur: 3,
			}}
		>
			{error && <></>}
			{!error && isLoading && <Loader></Loader>}
			{!error && !isLoading && (
				<>
					<ProfileForm closeModal={close} />
					<Group justify="space-between" mt="lg">
						{user.twoFA ? (
							<Button color="red" onClick={twoFAGenerate}>
								Deactivate 2FA
							</Button>
						) : (
							<Button color="green" onClick={twoFAGenerate}>
								Activate 2FA
							</Button>
						)}
					</Group>
					{qrCode && (
						<>
							<p>
								Step 1: Scan the QR code with your authenticator
								app (Google Authenticator, Authy, etc.)
							</p>
							<Group mt="lg" justify="center">
								<img src={qrCode} alt="QR Code" />
							</Group>

							<p>
								Step 2: Enter the 6-digit code generated by your
								app
							</p>
							<PinCodeValidator
								validationUrl="/user/twofa/activate"
								enable={true}
							/>
						</>
					)}
				</>
			)}
		</Modal>
	);
};

export default SettingsModal;
