import { Button, Center, Group, Loader, Modal } from "@mantine/core";
import { useState } from "react";
import { useMyData } from "../../hooks/useMyData";
import { errorNotif } from "../../utils/errorNotif";
import { axiosPrivate } from "../../utils/fetcher";
import PinCodeValidator from "../PinCodeValidator/PinCodeValidator";
import { notifications } from "@mantine/notifications";
import { IconCheck } from "@tabler/icons-react";

type Props = {
	opened: boolean;
	close: () => void;
};

const AccountSettings = ({ opened, close }: Props) => {
	const { user, error, isLoading } = useMyData();
	const [qrCode, setQrCode] = useState<string | null>(null);

	if (error) {
		errorNotif(error);
	}

	const twoFAGenerate = async () => {
		try {
			const response = await axiosPrivate.post("/user/twofa/generate");
			setQrCode(response.data);
		} catch (err: unknown) {
			errorNotif(err);
		}
	};

	const handlePinSuccess = () => {
		setQrCode(null);
		close();
		notifications.show({
			title: "Success",
			message: "2FA successfully activated",
			color: "green",
			icon: <IconCheck />,
		});
	};

	return (
		<Modal
			radius="md"
			centered={true}
			opened={opened}
			onClose={close}
			title="Account Settings"
			overlayProps={{
				backgroundOpacity: 0.55,
				blur: 3,
			}}
		>
			{!error && isLoading && (
				<Center>
					<Loader />
				</Center>
			)}
			{!error && !isLoading && (
				<>
					{!qrCode && (
						<Group justify="space-between">
							{user.twoFA ? (
								<Button color="red" onClick={twoFAGenerate}>
									Deactivate 2FA
								</Button>
							) : (
								<Button color="green" onClick={twoFAGenerate}>
									Activate 2FA
								</Button>
							)}
						</Group>
					)}
					{qrCode && (
						<>
							<p>
								Step 1: Scan the QR code with your authenticator
								app (Google Authenticator, Authy, etc.)
							</p>
							<Group mt="lg" justify="center">
								<img src={qrCode} alt="QR Code" />
							</Group>
							<p>
								Step 2: Enter the 6-digit code generated by your
								app
							</p>
							<PinCodeValidator
								validationUrl="/user/twofa/activate"
								enable={true}
								onSuccess={handlePinSuccess}
								buttonText="Activate"
							/>
						</>
					)}
				</>
			)}
		</Modal>
	);
};

export default AccountSettings;
